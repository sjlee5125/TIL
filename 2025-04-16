# 컴퓨팅 사고
- **문제분해**
- **패턴인식**
- **추상화(일반화)**
- **알고리즘 설계**

---

# 인공지능 활용

---

# 플러터 특징
- **크로스플랫폼 지원**
- **고성능**
- **사용자 정의 UI 구성 용이**
- **빠른 개발**
- **강력한 커뮤니티 및 생태계**

---

# 다트 (Dart)

## 변수 타입
- 변수: 데이터(값)을 저장하는 장소
- Dart는 숫자형과 문자열의 기본 변수 타입을 제공
  - `int` : 정수
  - `double` : 실수(소수점)
  - `String` : 문자열
  - `bool` : 참 또는 거짓

## 상수
- `final`: 값이 한번 설정되면 변경 불가
- `const`: 컴파일 시점에서 값이 고정됨

| 구분 | 값 고정 시점 | 특징 |
|------|---------------|------|
| final | 런타임        | 한 번만 설정 가능 |
| const | 컴파일 시점  | 항상 동일한 값 |

## 타입 검사 (`is`, `is!`)
- `is`: 같은 타입이면 `true`, 아니면 `false`
- `is!`: 같은 타입이면 `false`, 아니면 `true`
- 연산 결과: `bool`형

## 형 변환 요약 (C#/유사 언어 기준)
- 형 변환(Casting): 데이터 타입을 다른 타입으로 변환
- **명시적 형 변환 필요**: `double → int` (정보 손실 가능성)
- **객체지향에서의 필요성**
  - 부모 ↔ 자식 클래스 간 업/다운 캐스팅
  - 다양한 타입을 하나의 컬렉션에 담을 때
  - 특정 기능 호출 시

### 예시 코드
```dart
class Prompt {
  String text;
  Prompt(this.text);
}

class QuestionPrompt extends Prompt {
  String difficulty;
  QuestionPrompt(String text, this.difficulty) : super(text);

  void analyzeWithLLM() {
    print("LLM 분석 중: '$text' (난이도: $difficulty)");
  }
}

void main() {
  Prompt p = QuestionPrompt("Explain inheritance", "Easy");  // 업캐스팅
  if (p is QuestionPrompt) {
    QuestionPrompt q = p as QuestionPrompt;  // 다운캐스팅
    q.analyzeWithLLM();  // LLM 분석 중: 'Explain inheritance' (난이도: Easy)
  }
}
