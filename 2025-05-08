import sys
sys.setrecursionlimit(10000)  # 재귀 깊이 증가

def dfs(node, visited, graph):
    visited[node] = True
    for neighbor in graph[node]:
        if not visited[neighbor]:
            dfs(neighbor, visited, graph)

# 입력 처리
n, m = map(int, input().split())  # 정점 수, 간선 수
graph = [[] for _ in range(n + 1)]  # 인접 리스트 초기화
visited = [False] * (n + 1)  # 방문 여부

for _ in range(m):
    u, v = map(int, input().split())  # 간선 정보 입력
    graph[u].append(v)
    graph[v].append(u)

# 연결 요소 수 카운트
count = 0
for i in range(1, n + 1):
    if not visited[i]:
        dfs(i, visited, graph)
        count += 1

print(count)
